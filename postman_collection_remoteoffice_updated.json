{
  "info": {
    "name": "RemoteOffice API (Updated)",
    "_postman_id": "d4a3b1f0-remoteoffice-collection",
    "description": "Postman collection for RemoteOffice backend with hierarchical role system, project management, and real-time chat.\n\nRole Hierarchy:\n- Superadmin: Can create companies and assign company admins\n- Company Admin: Can add users (employees/members) to their specific company, create/manage projects, tasks, and chat channels\n- Employee/Member: Regular users within a company, can update assigned tasks, participate in chat\n\nAPI Structure (Updated):\n- Auth routes handle company/user creation and management\n- Company routes handle profile updates and media uploads\n- Tasks routes handle task management (CRUD, status updates, filtering)\n- Projects routes handle project management (CRUD, member management)\n- Dashboard routes handle analytics and statistics\n- Chat routes handle real-time messaging (channels, messages, user search)\n\nReal-time Features:\n- Socket.IO integration for live chat, typing indicators, user status\n- Multi-tenant chat with company-based isolation\n- Channel types: direct, group, project-based\n- Message types: text, file, image with reply support\n- Rate limiting and security validation\n\nEnvironment Variables Required:\n- baseUrl: API base URL (e.g., http://localhost:5000)\n- token: JWT token for authentication\n- SUPERADMIN_SECRET: Secret code for superadmin registration\n- companyId: Company ID for company-specific operations\n- taskId: Task ID for task-specific operations\n- projectId: Project ID for project-specific operations\n- userId: User ID for user-specific operations\n- channelId: Channel ID for chat operations\n- messageId: Message ID for message operations\n\nSocket.IO Real-time Events:\nConnect to: ws://localhost:5000 (or your server URL)\nAuthentication: Include JWT token in connection auth\n\nClient Events (Send to Server):\n- join_channel: { channelId } - Join a channel room\n- leave_channel: { channelId } - Leave a channel room\n- send_message: { channelId, content, type?, replyTo? } - Send message via socket\n- typing_start: { channelId } - Start typing indicator\n- typing_stop: { channelId } - Stop typing indicator\n- mark_as_read: { channelId } - Mark messages as read\n- status_change: { status } - Update user status (online/away/busy)\n\nServer Events (Receive from Server):\n- new_message: Message data when someone sends a message\n- user_joined_channel: { channelId, userId, userName } - User joined channel\n- user_left_channel: { channelId, userId, userName } - User left channel\n- user_typing: { channelId, userId, userName } - User started typing\n- user_stop_typing: { channelId, userId } - User stopped typing\n- user_status_change: { userId, status, lastSeen } - User status changed\n- messages_read: { channelId, userId, readAt } - Messages marked as read\n- message_sent: { tempId?, message } - Confirmation of sent message\n- joined_channel: { channelId } - Confirmation of joining channel\n- left_channel: { channelId } - Confirmation of leaving channel\n- error: { message } - Error occurred\n\nRate Limits:\n- General chat operations: 100 requests per 15 minutes\n- Message sending: 30 messages per minute\n- Channel creation: 10 channels per hour\n- Typing events: Limited to prevent spam",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/login", "host": ["{{baseUrl}}"], "path": ["api", "auth", "login"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"isaiah@example.com\",\n  \"password\": \"Password123!\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/register", "host": ["{{baseUrl}}"], "path": ["api", "auth", "register"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Isaiah Okibe\",\n  \"email\": \"isaiah@example.com\",\n  \"password\": \"Password123!\",\n  \"role\": \"employee\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Register Superadmin",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/register", "host": ["{{baseUrl}}"], "path": ["api", "auth", "register"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Super Admin\",\n  \"email\": \"superadmin@example.com\",\n  \"password\": \"SuperAdmin123!\",\n  \"role\": \"superadmin\",\n  \"adminCode\": \"{{SUPERADMIN_SECRET}}\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Create Company (Superadmin)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/companies", "host": ["{{baseUrl}}"], "path": ["api", "auth", "companies"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"companyName\": \"TechCorp Solutions\",\n  \"adminName\": \"John Smith\",\n  \"adminEmail\": \"john.smith@techcorp.com\",\n  \"adminPassword\": \"CompanyAdmin123!\",\n  \"industry\": \"Technology\",\n  \"address\": \"123 Tech Street, Silicon Valley, CA\",\n  \"phone\": \"+1234567890\",\n  \"website\": \"https://techcorp.com\",\n  \"country\": \"USA\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Get All Companies (Superadmin)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/companies", "host": ["{{baseUrl}}"], "path": ["api", "auth", "companies"] }
          },
          "response": []
        },
        {
          "name": "Add User to Company (Company Admin)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/companies/{{companyId}}/users", "host": ["{{baseUrl}}"], "path": ["api", "auth", "companies", "{{companyId}}", "users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"jane.doe@techcorp.com\",\n  \"password\": \"Employee123!\",\n  \"role\": \"employee\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Get Company Users (Company Admin/Superadmin)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/auth/companies/{{companyId}}/users", "host": ["{{baseUrl}}"], "path": ["api", "auth", "companies", "{{companyId}}", "users"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get Me",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/users/me", "host": ["{{baseUrl}}"], "path": ["api", "users", "me"] }
          },
          "response": []
        },
        {
          "name": "Update Me",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/users/update", "host": ["{{baseUrl}}"], "path": ["api", "users", "update"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Isaiah\",\n  \"lastName\": \"Okibe\",\n  \"phone\": \"+2348012345678\",\n  \"jobTitle\": \"Senior Developer\",\n  \"avatarUrl\": \"https://cdn.remortify.com/avatars/isaiah.png\",\n  \"timezone\": \"Africa/Lagos\",\n  \"language\": \"en\",\n  \"status\": \"active\",\n  \"country\": \"Nigeria\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Upload Avatar",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/users/avatar", "host": ["{{baseUrl}}"], "path": ["api", "users", "avatar"] },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "avatar", "type": "file", "src": [] }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Company",
      "item": [
        {
          "name": "Get Company (Role-based)",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/company", "host": ["{{baseUrl}}"], "path": ["api", "company"] },
            "description": "Returns all companies for superadmin, or current user's company for other roles"
          },
          "response": []
        },
        {
          "name": "Update Company (Company Admin)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/company/update", "host": ["{{baseUrl}}"], "path": ["api", "company", "update"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Company Name\",\n  \"phone\": \"+2349012345678\",\n  \"website\": \"https://updatedcompany.com\",\n  \"industry\": \"Technology\",\n  \"address\": \"456 Updated Street, Lagos, Nigeria\",\n  \"country\": \"Nigeria\",\n  \"subscriptionPlan\": \"pro\",\n  \"subscriptionStatus\": \"active\",\n  \"billingCycle\": \"monthly\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Update Specific Company (Superadmin)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/api/company/{{companyId}}/update", "host": ["{{baseUrl}}"], "path": ["api", "company", "{{companyId}}", "update"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Superadmin Updated Company\",\n  \"industry\": \"Updated Industry\",\n  \"subscriptionPlan\": \"enterprise\",\n  \"subscriptionStatus\": \"active\"\n}"
            }
          },
          "response": []
        },
        {
          "name": "Upload Company Logo (Company Admin/Superadmin)",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/company/logo", "host": ["{{baseUrl}}"], "path": ["api", "company", "logo"] },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "logo", "type": "file", "src": [] }
              ]
            },
            "description": "Upload logo for current user's company (company admin) or any company (superadmin)"
          },
          "response": []
        },
        {
          "name": "Upload Specific Company Logo (Superadmin)",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": { "raw": "{{baseUrl}}/api/company/{{companyId}}/logo", "host": ["{{baseUrl}}"], "path": ["api", "company", "{{companyId}}", "logo"] },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "logo", "type": "file", "src": [] }
              ]
            },
            "description": "Upload logo for a specific company by ID (superadmin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks?status=todo&priority=high&page=1&limit=10&sortBy=dueDate&sortOrder=asc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"],
              "query": [
                { "key": "status", "value": "todo", "description": "Filter by status: todo, in_progress, done" },
                { "key": "priority", "value": "high", "description": "Filter by priority: high, medium, low" },
                { "key": "assignee", "value": "", "description": "Filter by assignee user ID" },
                { "key": "project", "value": "", "description": "Filter by project ID" },
                { "key": "page", "value": "1", "description": "Page number for pagination" },
                { "key": "limit", "value": "10", "description": "Number of items per page" },
                { "key": "sortBy", "value": "dueDate", "description": "Sort by: createdAt, updatedAt, dueDate, priority, status" },
                { "key": "sortOrder", "value": "asc", "description": "Sort order: asc, desc" }
              ]
            },
            "description": "Get all tasks with filtering and pagination. Company admin and employees can access."
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "{{taskId}}"]
            },
            "description": "Get a specific task by ID"
          },
          "response": []
        },
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implement user authentication\",\n  \"description\": \"Build secure JWT-based authentication system with role-based access control\",\n  \"assigneeId\": \"{{userId}}\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\",\n  \"priority\": \"high\",\n  \"status\": \"todo\",\n  \"projectId\": \"{{projectId}}\",\n  \"tags\": [\"backend\", \"security\", \"authentication\"]\n}"
            },
            "description": "Create a new task. Only company admins can create tasks."
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "{{taskId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated task description\",\n  \"assigneeId\": \"{{userId}}\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\",\n  \"priority\": \"medium\",\n  \"status\": \"in_progress\",\n  \"projectId\": \"{{projectId}}\",\n  \"tags\": [\"backend\", \"updated\"]\n}"
            },
            "description": "Update an existing task. Company admins and task creators can update."
          },
          "response": []
        },
        {
          "name": "Update Task Status",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "{{taskId}}", "status"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"done\"\n}"
            },
            "description": "Update only the task status. Company admins, task creators, and assignees can update."
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "{{taskId}}"]
            },
            "description": "Delete a task. Only company admins and task creators can delete."
          },
          "response": []
        },
        {
          "name": "Get My Tasks",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/my-tasks?status=in_progress&priority=high&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "my-tasks"],
              "query": [
                { "key": "status", "value": "in_progress", "description": "Filter by status: todo, in_progress, done" },
                { "key": "priority", "value": "high", "description": "Filter by priority: high, medium, low" },
                { "key": "page", "value": "1", "description": "Page number for pagination" },
                { "key": "limit", "value": "10", "description": "Number of items per page" }
              ]
            },
            "description": "Get tasks assigned to the current user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Projects",
      "item": [
        {
          "name": "Get All Projects",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects?status=active&page=1&limit=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects"],
              "query": [
                { "key": "status", "value": "active", "description": "Filter by status: active, completed, on_hold, cancelled" },
                { "key": "page", "value": "1", "description": "Page number for pagination" },
                { "key": "limit", "value": "10", "description": "Number of items per page" },
                { "key": "sortBy", "value": "createdAt", "description": "Sort by: createdAt, updatedAt, dueDate, name, progress" },
                { "key": "sortOrder", "value": "desc", "description": "Sort order: asc, desc" }
              ]
            },
            "description": "Get all projects with filtering and pagination"
          },
          "response": []
        },
        {
          "name": "Get Project by ID",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            },
            "description": "Get a specific project with its tasks"
          },
          "response": []
        },
        {
          "name": "Create Project",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"RemoteOffice Platform\",\n  \"description\": \"Complete remote work management platform with task tracking, project management, and team collaboration features\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\",\n  \"memberIds\": [\"{{userId}}\"]\n}"
            },
            "description": "Create a new project. Only company admins can create projects."
          },
          "response": []
        },
        {
          "name": "Update Project",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Project Name\",\n  \"description\": \"Updated project description\",\n  \"dueDate\": \"2024-12-31T23:59:59Z\",\n  \"status\": \"active\",\n  \"memberIds\": [\"{{userId}}\"]\n}"
            },
            "description": "Update a project. Company admins and project creators can update."
          },
          "response": []
        },
        {
          "name": "Delete Project",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            },
            "description": "Delete a project. Only company admins and project creators can delete."
          },
          "response": []
        },
        {
          "name": "Get Project Tasks",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}/tasks?status=todo&assignee={{userId}}&priority=high",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}", "tasks"],
              "query": [
                { "key": "status", "value": "todo", "description": "Filter by status: todo, in_progress, done" },
                { "key": "assignee", "value": "{{userId}}", "description": "Filter by assignee user ID" },
                { "key": "priority", "value": "high", "description": "Filter by priority: high, medium, low" }
              ]
            },
            "description": "Get all tasks for a specific project"
          },
          "response": []
        },
        {
          "name": "Add Project Members",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}/members",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}", "members"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"memberIds\": [\"{{userId}}\"]\n}"
            },
            "description": "Add members to a project. Company admins and project creators can add members."
          },
          "response": []
        },
        {
          "name": "Remove Project Member",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}/members/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}", "members", "{{userId}}"]
            },
            "description": "Remove a member from a project. Company admins and project creators can remove members."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Dashboard",
      "item": [
        {
          "name": "Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "stats"]
            },
            "description": "Get dashboard statistics including task and project metrics"
          },
          "response": []
        },
        {
          "name": "Get Active Projects",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/active-projects",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "active-projects"]
            },
            "description": "Get active projects with progress information"
          },
          "response": []
        },
        {
          "name": "Get Task Analytics",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/task-analytics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "task-analytics"]
            },
            "description": "Get task analytics including priority distribution and performance metrics"
          },
          "response": []
        },
        {
          "name": "Get Project Analytics",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/project-analytics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "project-analytics"]
            },
            "description": "Get project analytics including status distribution and progress metrics"
          },
          "response": []
        },
        {
          "name": "Get Team Members",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/team-members",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "team-members"]
            },
            "description": "Get all team members for task assignment and project management"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Chat",
      "item": [
        {
          "name": "Get Channels",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels"]
            },
            "description": "Get all channels where the user is a participant. Returns direct, group, and project channels with last message and participant info."
          },
          "response": []
        },
        {
          "name": "Create Channel",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Project Discussion\",\n  \"type\": \"group\",\n  \"participantIds\": [\"{{userId}}\"],\n  \"isPrivate\": false,\n  \"allowedRoles\": [\"company_admin\", \"employee\"]\n}"
            },
            "description": "Create a new channel. Types: 'direct' (1-on-1), 'group' (team chat), 'project' (project-specific). Only company admins can create group channels."
          },
          "response": []
        },
        {
          "name": "Create Direct Channel",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Direct Chat\",\n  \"type\": \"direct\",\n  \"participantIds\": [\"{{userId}}\"]\n}"
            },
            "description": "Create a direct (1-on-1) channel with another user. Only requires one participant ID (the other user)."
          },
          "response": []
        },
        {
          "name": "Create Project Channel",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Project Team Chat\",\n  \"type\": \"project\",\n  \"participantIds\": [\"{{userId}}\"],\n  \"projectId\": \"{{projectId}}\",\n  \"isPrivate\": true\n}"
            },
            "description": "Create a project-specific channel. Requires projectId and user must be a project member."
          },
          "response": []
        },
        {
          "name": "Get Channel Messages",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/messages?limit=50&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "messages"],
              "query": [
                { "key": "limit", "value": "50", "description": "Number of messages to retrieve (1-100)" },
                { "key": "offset", "value": "0", "description": "Number of messages to skip for pagination" },
                { "key": "before", "value": "", "description": "Get messages before this message ID (optional - leave empty for latest messages)" }
              ]
            },
            "description": "Get messages for a specific channel with pagination. User must be a channel participant."
          },
          "response": []
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "messages"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Hello team! How is the project progressing?\",\n  \"type\": \"text\"\n}"
            },
            "description": "Send a text message to a channel. Rate limited to 30 messages per minute."
          },
          "response": []
        },
        {
          "name": "Send Reply Message",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "messages"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"@john Great progress on the authentication module!\",\n  \"type\": \"text\",\n  \"replyTo\": \"{{messageId}}\"\n}"
            },
            "description": "Send a reply to an existing message. Include replyTo field with the message ID being replied to."
          },
          "response": []
        },
        {
          "name": "Edit Message",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/messages/{{messageId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "messages", "{{messageId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Updated message content - fixed typo!\"\n}"
            },
            "description": "Edit your own message. Only text messages can be edited and only within 24 hours of sending."
          },
          "response": []
        },
        {
          "name": "Delete Message",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/messages/{{messageId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "messages", "{{messageId}}"]
            },
            "description": "Delete a message. Users can delete their own messages, company admins can delete any message in their company."
          },
          "response": []
        },
        {
          "name": "Mark Channel as Read",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/read",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "read"]
            },
            "description": "Mark all messages in a channel as read. Used for read receipt functionality."
          },
          "response": []
        },
        {
          "name": "Search Users",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/users/search?q=john",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "users", "search"],
              "query": [
                { "key": "q", "value": "john", "description": "Search query for user name or email" }
              ]
            },
            "description": "Search for users within the same company for channel invitations. Returns up to 20 results."
          },
          "response": []
        },
        {
          "name": "Join Channel",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/join",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "join"]
            },
            "description": "Join a public channel. Cannot join private channels without invitation or direct channels."
          },
          "response": []
        },
        {
          "name": "Leave Channel",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/leave",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "leave"]
            },
            "description": "Leave a channel. Cannot leave direct channels. Channel creator must transfer ownership before leaving."
          },
          "response": []
        },
        {
          "name": "Get Channel Users",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/channels/{{channelId}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "channels", "{{channelId}}", "users"]
            },
            "description": "Get all users in a channel with their status and role information."
          },
          "response": []
        },
        {
          "name": "Upload File (Not Implemented)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chat/upload",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "upload"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "file", "type": "file", "src": [] },
                { "key": "channelId", "value": "{{channelId}}", "type": "text" }
              ]
            },
            "description": "Upload file for chat. Currently returns 501 Not Implemented - to be integrated with existing Cloudinary setup."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Ensure Authorization header uses {{token}} if set in environment",
          "if (pm.environment.get('token')) {",
          "  pm.request.headers.upsert({ key: 'Authorization', value: 'Bearer ' + pm.environment.get('token') });",
          "}"
        ]
      }
    }
  ],
  "variable": []
}
